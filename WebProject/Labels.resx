<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ActIdentitate" xml:space="preserve">
    <value>Serie act identitate</value>
  </data>
  <data name="Adauga" xml:space="preserve">
    <value>Adauga</value>
  </data>
  <data name="AnFabricatie" xml:space="preserve">
    <value>An fabricatie</value>
  </data>
  <data name="Anulare" xml:space="preserve">
    <value>Anulare</value>
  </data>
  <data name="Autentificare" xml:space="preserve">
    <value>Autentificare</value>
  </data>
  <data name="Camion" xml:space="preserve">
    <value>Camion</value>
  </data>
  <data name="CNP" xml:space="preserve">
    <value>CNP</value>
  </data>
  <data name="DataAngajarii" xml:space="preserve">
    <value>Data angajarii</value>
  </data>
  <data name="DataExpirareAnalizeMedicale" xml:space="preserve">
    <value>Data expirare analize medicale</value>
  </data>
  <data name="DataExpirareAsigurare" xml:space="preserve">
    <value>Data expirare asigurare</value>
  </data>
  <data name="DataExpirareAtestat" xml:space="preserve">
    <value>Data expirare atestat</value>
  </data>
  <data name="DataExpirareCardTahograf" xml:space="preserve">
    <value>Data expirare card tahograf</value>
  </data>
  <data name="DataExpirareCopieConforma" xml:space="preserve">
    <value>Data expirare copie conforma</value>
  </data>
  <data name="DataExpirareITP" xml:space="preserve">
    <value>Data expirare ITP</value>
  </data>
  <data name="DataExpirarePermis" xml:space="preserve">
    <value>Data expirare permis</value>
  </data>
  <data name="DataExpirareTahograf" xml:space="preserve">
    <value>Data expirare Tahograf</value>
  </data>
  <data name="DataExpirareVignetteNL" xml:space="preserve">
    <value>Data expirare Vignette NL</value>
  </data>
  <data name="DataExpirareVignetteUK" xml:space="preserve">
    <value>Data expirare Vignette UK</value>
  </data>
  <data name="DataNasterii" xml:space="preserve">
    <value>Data nasterii</value>
  </data>
  <data name="Editeaza" xml:space="preserve">
    <value>Editeaza</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="Firma" xml:space="preserve">
    <value>Firma</value>
  </data>
  <data name="InformatiiGenerale" xml:space="preserve">
    <value>Informatii Generale</value>
  </data>
  <data name="IntoducetiEmail" xml:space="preserve">
    <value>Intoduceti email</value>
  </data>
  <data name="IntoducetiParola" xml:space="preserve">
    <value>Intoduceti parola</value>
  </data>
  <data name="InvalidUserOrPassword" xml:space="preserve">
    <value>Email sau parola gresita!</value>
  </data>
  <data name="Marca" xml:space="preserve">
    <value>Marca/Brand</value>
  </data>
  <data name="NumarInmatriculare" xml:space="preserve">
    <value>Numar inmatriculare</value>
  </data>
  <data name="NumeSofer" xml:space="preserve">
    <value>Nume sofer</value>
  </data>
  <data name="Parola" xml:space="preserve">
    <value>Parola</value>
  </data>
  <data name="PrenumeSofer" xml:space="preserve">
    <value>Prenume sofer</value>
  </data>
  <data name="Salvare" xml:space="preserve">
    <value>Salvare</value>
  </data>
  <data name="Sterge" xml:space="preserve">
    <value>Sterge</value>
  </data>
  <data name="ValabilitateActe" xml:space="preserve">
    <value>Valabilitate Acte</value>
  </data>
  <data name="AdblueLitri" xml:space="preserve">
    <value>Adblue litri</value>
  </data>
  <data name="AlimentareDieselEWlitrii" xml:space="preserve">
    <value>Alimentare Diesel EW litri</value>
  </data>
  <data name="Cheltuieli" xml:space="preserve">
    <value>Cheltuieli</value>
  </data>
  <data name="CheltuieliDeDecontat" xml:space="preserve">
    <value>Cheltuieli de decontat</value>
  </data>
  <data name="CheltuieliPlatite" xml:space="preserve">
    <value>Cheltuieli platite</value>
  </data>
  <data name="CheltuieliSofer" xml:space="preserve">
    <value>Cheltuieli sofer</value>
  </data>
  <data name="ConsumAndAlimentari" xml:space="preserve">
    <value>Consum &amp; Alimentari</value>
  </data>
  <data name="ConsumEstimat" xml:space="preserve">
    <value>Consum estimat</value>
  </data>
  <data name="ConsumGPS" xml:space="preserve">
    <value>Consum GPS</value>
  </data>
  <data name="ConsumGPSFinal" xml:space="preserve">
    <value>Consum GPS final</value>
  </data>
  <data name="ConsumGPSInitial" xml:space="preserve">
    <value>Consum GPS initial</value>
  </data>
  <data name="ConsumReal" xml:space="preserve">
    <value>Consum real</value>
  </data>
  <data name="Data" xml:space="preserve">
    <value>Data</value>
  </data>
  <data name="Diferenta" xml:space="preserve">
    <value>Diferenta</value>
  </data>
  <data name="KMAlimentati" xml:space="preserve">
    <value>Km la alimentare</value>
  </data>
  <data name="KMDFSD" xml:space="preserve">
    <value>KMDFSD</value>
  </data>
  <data name="KMGgl" xml:space="preserve">
    <value>KM Ggl</value>
  </data>
  <data name="KMGps" xml:space="preserve">
    <value>KM GPS</value>
  </data>
  <data name="KMGpsFinal" xml:space="preserve">
    <value>KM GPS finali</value>
  </data>
  <data name="KMGpsInitiali" xml:space="preserve">
    <value>KM GPS initiali</value>
  </data>
  <data name="LocDescarcare" xml:space="preserve">
    <value>Loc descarcare</value>
  </data>
  <data name="LocIncarcare" xml:space="preserve">
    <value>Loc incarcare</value>
  </data>
  <data name="Motiv" xml:space="preserve">
    <value>Motiv</value>
  </data>
  <data name="Sofer" xml:space="preserve">
    <value>Sofer</value>
  </data>
  <data name="SpecificatieCheltuieli" xml:space="preserve">
    <value>Specificatie cheltuieli</value>
  </data>
  <data name="Tonaj" xml:space="preserve">
    <value>Tonaj</value>
  </data>
  <data name="TotalPlati" xml:space="preserve">
    <value>Total plati</value>
  </data>
  <data name="ValoareAdblue" xml:space="preserve">
    <value>Valoare Adblue</value>
  </data>
  <data name="ValoareDiesel" xml:space="preserve">
    <value>Valoare diesel</value>
  </data>
  <data name="Vlaplan" xml:space="preserve">
    <value>Vlaplan</value>
  </data>
  <data name="Vlarref" xml:space="preserve">
    <value>Vlarref</value>
  </data>
  <data name="ExportAll" xml:space="preserve">
    <value>Export curse</value>
  </data>
  <data name="ExportWorker" xml:space="preserve">
    <value>Export curse sofer</value>
  </data>
  <data name="ExportWorkerSettings" xml:space="preserve">
    <value>Optiuni export sofer</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Inchide</value>
  </data>
  <data name="EndDate" xml:space="preserve">
    <value>Data sfarsit</value>
  </data>
  <data name="StartDate" xml:space="preserve">
    <value>Data inceput</value>
  </data>
  <data name="GenerateExcel" xml:space="preserve">
    <value>Descarca excel</value>
  </data>
</root>